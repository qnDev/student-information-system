/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hust.soict.ui.student;

import edu.hust.soict.dao.ClassDAO;
import edu.hust.soict.dao.DBConnect;
import edu.hust.soict.dao.StudentDAO;
import edu.hust.soict.objects.Student;
import edu.hust.soict.objects.Class;
import edu.hust.soict.objects.Register;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Search information students, detail courses and register class.
 *
 * @author BKHN(quangnd)
 */
public class Search extends javax.swing.JPanel {

    MainStudent mainStudent = new MainStudent();
    private final DefaultTableModel dtmMaSV;
    private final DefaultTableModel dtmLop;
    private final DefaultTableModel dtmDetailReg;
    String userlogin;
    PreparedStatement ps, ps1, ps2;
    ResultSet rs, rs1, rs2;
    // ArrayList<BangDiem> listbdiem = null;

    public Search() throws SQLException {
        initComponents();
        dtmMaSV = new DefaultTableModel();
        dtmLop = new DefaultTableModel();
        dtmDetailReg = new DefaultTableModel();
        dtmMaSV.addColumn("Mã sinh viên");
        dtmMaSV.addColumn("Họ tên");
        dtmMaSV.addColumn("Lớp");
        dtmMaSV.addColumn("CTĐT");
        dtmMaSV.addColumn("Ngày Sinh");
        dtmMaSV.addColumn("Hệ ĐT");
        dtmMaSV.addColumn("Khóa học");
        dtmMaSV.addColumn("Email");
        dtmMaSV.addColumn("Trạng thái");

        jtbTTSV.setModel(dtmMaSV);
        dtmLop.addColumn("Mã lớp");
        dtmLop.addColumn("Bắt đầu");
        dtmLop.addColumn("Kết thúc");
        dtmLop.addColumn("Thứ");
        dtmLop.addColumn("Tuần học");
        dtmLop.addColumn("Loại lớp");
        dtmLop.addColumn("Mã môn học");
        dtmLop.addColumn("Nhóm");
        dtmLop.addColumn("Phòng học");
        dtmLop.addColumn("Đã ĐK");
        dtmLop.addColumn("Max ĐK");
        jtbLOP.setModel(dtmLop);

        dtmDetailReg.addColumn("ID");
        dtmDetailReg.addColumn("Mã sinh viên");
        dtmDetailReg.addColumn("Mã lớp ĐK");
        dtmDetailReg.addColumn("Mã môn học");
        dtmDetailReg.addColumn("Tên môn học");
        dtmDetailReg.addColumn("TC");
        jtbLOP1.setModel(dtmDetailReg);
        fetchJLabel4();
        fetchListCourses();
        fetchRegister();
    }

    /**
     * Creates new form Search with data loaded to Table.
     *
     * @param username
     * @throws java.sql.SQLException
     */
    public Search(String username) throws SQLException {
        initComponents();
        dtmMaSV = new DefaultTableModel();
        dtmLop = new DefaultTableModel();
        dtmDetailReg = new DefaultTableModel();
        //TIm kiem sinh vien theo ma lop
        dtmMaSV.addColumn("Mã sinh viên");
        dtmMaSV.addColumn("Họ tên");
        dtmMaSV.addColumn("Lớp");
        dtmMaSV.addColumn("CTĐT");
        dtmMaSV.addColumn("Ngày Sinh");
        dtmMaSV.addColumn("Hệ ĐT");
        dtmMaSV.addColumn("Khóa học");
        dtmMaSV.addColumn("Email");
        dtmMaSV.addColumn("Trạng thái");

        jtbTTSV.setModel(dtmMaSV);

        //TIm Kiem diem theo ma sv
        dtmLop.addColumn("Mã lớp");
        dtmLop.addColumn("Bắt đầu");
        dtmLop.addColumn("Kết thúc");
        dtmLop.addColumn("Thứ");
        dtmLop.addColumn("Tuần học");
        dtmLop.addColumn("Loại lớp");
        dtmLop.addColumn("Mã môn học");
        dtmLop.addColumn("Nhóm");
        dtmLop.addColumn("Phòng học");
        dtmLop.addColumn("Đã ĐK");
        dtmLop.addColumn("Max ĐK");
        jtbLOP.setModel(dtmLop);

        dtmDetailReg.addColumn("ID");
        dtmDetailReg.addColumn("Mã sinh viên");
        dtmDetailReg.addColumn("Mã lớp ĐK");
        dtmDetailReg.addColumn("Mã môn học");
        dtmDetailReg.addColumn("Tên môn học");
        dtmDetailReg.addColumn("TC");
        jtbLOP1.setModel(dtmDetailReg);

        this.userlogin = username;
        jTextField1.setText(username);
        fetchJLabel4();
        fetchListCourses();
        fetchRegister();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("quan_ly_sinh_vien?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        thongTinSinhVienQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM ThongTinSinhVien t");
        thongTinSinhVienList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : thongTinSinhVienQuery.getResultList();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jtfmaSV = new javax.swing.JTextField();
        jbtSearch = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbTTSV = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jtfmaLop = new javax.swing.JTextField();
        jbtnsearchmasv = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbLOP = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbLOP1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        setPreferredSize(new java.awt.Dimension(799, 463));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(861, 372));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), java.awt.Color.white));

        jtfmaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfmaSVActionPerformed(evt);
            }
        });
        jtfmaSV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfmaSVKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfmaSVKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfmaSVKeyReleased(evt);
            }
        });

        jbtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbtSearch.setForeground(new java.awt.Color(204, 0, 0));
        jbtSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/bar-chart-reload.png"))); // NOI18N
        jbtSearch.setText("Search");
        jbtSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jtfmaSV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSearch)
                .addGap(216, 216, 216))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jtfmaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtSearch))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);

        jtbTTSV = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, thongTinSinhVienList, jtbTTSV);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idSinhVien}"));
        columnBinding.setColumnName("Id Sinh Vien");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tenSinhVien}"));
        columnBinding.setColumnName("Ten Sinh Vien");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ngaySinh}"));
        columnBinding.setColumnName("Ngay Sinh");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lopHoc}"));
        columnBinding.setColumnName("Lop Hoc");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${department}"));
        columnBinding.setColumnName("Department");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${khoaHoc}"));
        columnBinding.setColumnName("Khoa Hoc");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${trangThai}"));
        columnBinding.setColumnName("Trang Thai");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${heHoc}"));
        columnBinding.setColumnName("He Hoc");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${chuongtrinhDT}"));
        columnBinding.setColumnName("Chuongtrinh DT");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${donViTinChiHocPhi}"));
        columnBinding.setColumnName("Don Vi Tin Chi Hoc Phi");
        columnBinding.setColumnClass(Float.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jtbTTSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtbTTSVMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jtbTTSV);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TÌM THÔNG TIN SINH VIÊN ", jPanel4);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jtfmaLop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfmaLopKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfmaLopKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfmaLopKeyReleased(evt);
            }
        });

        jbtnsearchmasv.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbtnsearchmasv.setForeground(new java.awt.Color(204, 0, 0));
        jbtnsearchmasv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/bar-chart-reload.png"))); // NOI18N
        jbtnsearchmasv.setText("Search");
        jbtnsearchmasv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnsearchmasv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnsearchmasvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jtfmaLop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnsearchmasv)
                .addGap(204, 204, 204))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jtfmaLop, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnsearchmasv))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        jtbLOP = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        jtbLOP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13"
            }
        ));
        jScrollPane1.setViewportView(jtbLOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Mã sinh viên:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 61, 0, 0);
        jPanel7.add(jLabel1, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Mã lớp ĐK:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 61, 0, 0);
        jPanel7.add(jLabel2, gridBagConstraints);

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel7.add(jTextField1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel7.add(jTextField2, gridBagConstraints);

        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/cloud-computing.png"))); // NOI18N
        jButton1.setText("AddNew");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 46, 0, 0);
        jPanel7.add(jButton1, gridBagConstraints);

        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/delete (1).png"))); // NOI18N
        jButton2.setText("Delete");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 46, 0, 0);
        jPanel7.add(jButton2, gridBagConstraints);

        jTextField3.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 12, 0, 0);
        jPanel7.add(jTextField3, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("ID:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 74;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 61, 0, 0);
        jPanel7.add(jLabel3, gridBagConstraints);

        jButton4.setForeground(new java.awt.Color(204, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hust/soict/resources/bar-chart-reload.png"))); // NOI18N
        jButton4.setText("Reset");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 46, 17, 0);
        jPanel7.add(jButton4, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Tổng số TC đã ĐK: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 54;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 54, 0, 51);
        jPanel7.add(jLabel4, gridBagConstraints);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        jtbLOP1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        jtbLOP1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jtbLOP1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbLOP1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtbLOP1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(188, 188, 188)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(119, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("THÔNG TIN LỚP MỞ ĐK", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbTTSVMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTTSVMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbTTSVMouseReleased

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        // TODO add your handling code here:
        timkiemtheomasv();
    }//GEN-LAST:event_jbtSearchActionPerformed

    private void jtfmaSVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaSVKeyReleased
        // TODO add your handling code here:
        //timkiemtheomalop();
    }//GEN-LAST:event_jtfmaSVKeyReleased

    private void jtfmaSVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaSVKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfmaSVKeyTyped

    private void jtfmaSVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaSVKeyPressed
        // TODO add your handling code here:
        //timkiemtheomalop();
    }//GEN-LAST:event_jtfmaSVKeyPressed

    private void jtfmaLopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaLopKeyPressed
        // TODO add your handling code here:
        // timKiemDiemTheoMaSV();
    }//GEN-LAST:event_jtfmaLopKeyPressed

    private void jtfmaLopKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaLopKeyReleased
        // TODO add your handling code here:
        //timKiemDiemTheoMaSV();
    }//GEN-LAST:event_jtfmaLopKeyReleased

    private void jtfmaLopKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfmaLopKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfmaLopKeyTyped

    private void jbtnsearchmasvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnsearchmasvActionPerformed
        // TODO add your handling code here:
        timKiemLopDK();
    }//GEN-LAST:event_jbtnsearchmasvActionPerformed

    private void jtfmaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfmaSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfmaSVActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ClassDAO cldao = new ClassDAO();
        String s = "";
        String username = jTextField1.getText();
        String malopdk = jTextField2.getText();
//
//        if (DBConnect.open()) {
//            try {
//
//                ps1 = DBConnect.cnn.prepareStatement("SELECT danh_sach_SV_dang_ki_lop.ma_lop_mo_SV_DK, danh_sach_lop_mo_DK.thu, danh_sach_lop_mo_DK.thoi_gian_bat_dau, danh_sach_lop_mo_DK.thoi_gian_ket_thuc FROM danh_sach_SV_dang_ki_lop\n"
//                        + "INNER JOIN danh_sach_lop_mo_DK ON ma_lop_mo_SV_DK = ma_lop_mo_DK WHERE id_sinh_vien_DK =" + username);
//                rs1 = ps.executeQuery();
//                Time start_time1 = rs1.getTime(3);
//                Time start_time2 = rs1.getTime(4);
//                ps2 = DBConnect.cnn.prepareStatement("SELECT danh_sach_SV_dang_ki_lop.ma_lop_mo_SV_DK, danh_sach_lop_mo_DK.thu, danh_sach_lop_mo_DK.thoi_gian_bat_dau, danh_sach_lop_mo_DK.thoi_gian_ket_thuc FROM danh_sach_SV_dang_ki_lop\n"
//                        + "INNER JOIN danh_sach_lop_mo_DK ON ma_lop_mo_SV_DK = ma_lop_mo_DK WHERE id_sinh_vien_DK =" + username);
//                rs2 = ps.executeQuery();
//            } catch (SQLException ex) {
//                //Logger.getLogger(AddUserDAO.class.getName()).log(Level.SEVERE, null, ex);
//                String sqlMessage = ex.getMessage();
//                String sqlState = ex.getSQLState();
//                int vendorCode = ex.getErrorCode();
//                System.err.println("SQLException:");
//                System.err.println("ERROR code: " + vendorCode);
//                System.err.println("SQL state: " + sqlState);
//                System.err.println("Message: " + sqlMessage + "\n----------------");
//                JOptionPane.showMessageDialog(null, sqlMessage + "\n" + "Bạn không thể đăng kí được mã lớp:" + "!", "CTĐT Thông báo!", JOptionPane.INFORMATION_MESSAGE);
//            } finally {
//                DBConnect.close(ps1);
//                DBConnect.close(ps2);
//            }
//        }
//
        if (malopdk.equals(s)) {
            JOptionPane.showMessageDialog(this.mainStudent, "Mã lớp đăng kí không được trống!", "Thông báo!", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                Register rg = new Register(username, malopdk);
                Register insert = cldao.addNew(rg);
                fetchJLabel4();
                fetchRegister();
            } catch (SQLException ex) {
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Delete courses registered.
     *
     * @param evt event action performed when clicked button Delete Course
     * registered.
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jtbLOP1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this.mainStudent, "Bạn chưa chọn lớp cần xóa!", "Thông báo!", JOptionPane.WARNING_MESSAGE);
        } else {
            int b = JOptionPane.showConfirmDialog(this.mainStudent, "Bạn chắc chắn muốn xóa dữ liệu này?", "Thông Báo", JOptionPane.YES_NO_OPTION);
            if (b == JOptionPane.YES_OPTION) {
                try {
                    String idLopDK = jTextField3.getText();
                    new ClassDAO().deleteRegister(idLopDK);
                    //jLabel4.removeAll();
                    fetchJLabel4();
                    fetchRegister();
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
                }
                resetForm1();
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Get value from table Register to Text Fields.
     *
     * @param evt event action performed when clicked table Register Courses.
     */
    private void jtbLOP1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbLOP1MouseClicked
        // TODO add your handling code here:
        jTextField3.setText(jtbLOP1.getValueAt(jtbLOP1.getSelectedRow(), 0).toString());
        jTextField1.setText(jtbLOP1.getValueAt(jtbLOP1.getSelectedRow(), 1).toString());
        jTextField2.setText(jtbLOP1.getValueAt(jtbLOP1.getSelectedRow(), 2).toString());
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
//        jButtonDelete.setEnabled(true);
//        jButtonUpdate.setEnabled(true);
//        jButtonReset.setEnabled(true);
        jTextField3.setEditable(false);
        jTextField2.setEditable(false);
    }//GEN-LAST:event_jtbLOP1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.resetForm();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * Search info about student by id.
     */
    public void timkiemtheomasv() {
        while (dtmMaSV.getRowCount() > 0) {
            dtmMaSV.removeRow(0);
        }
        String maSV = jtfmaSV.getText();
        StudentDAO stdao = new StudentDAO();
        ArrayList<Student> list = null;
        if (maSV != null && maSV.trim().length() > 0) {
            list = stdao.findByIDStudent(maSV);
            for (Student sv : list) {
                dtmMaSV.addRow(toObjectData(sv));
            }
        } else {
            list = stdao.getAll();
            for (Student sv : list) {
                dtmMaSV.addRow(toObjectData(sv));
            }
        }
    }

    private static Object[] toObjectData(Student sv) {
        Object[] objectData = {sv.getId_sinh_vien(), sv.getTen_sinh_vien(), sv.getLop_hoc(),
            sv.getChuong_trinh_DT(), sv.getNgay_sinh(), sv.getHe_hoc(), sv.getKhoa(), sv.getEmail(), sv.getTrang_thai()};
        return objectData;
    }

    /**
     *
     */
    public void timKiemLopDK() {
        while (dtmLop.getRowCount() > 0) {
            dtmLop.removeRow(0);
        }
        String maLop = jtfmaLop.getText();
        ArrayList<Class> list = null;
        ClassDAO cldao = new ClassDAO();
        // IBangDiemDAO bangDiemDAO = (IBangDiemDAO) Class.forName("BangDiem.BangDiemDAO").newInstance();
        if (maLop != null && maLop.trim().length() > 0) {
            list = cldao.findByIDClass(maLop);
            for (Class cl : list) {
                dtmLop.addRow(toOjectClass(cl));
            }
        } else {
            list = cldao.getAll();
            for (Class cl : list) {
                dtmLop.addRow(toOjectClass(cl));
            }
        }

    }

    /**
     *
     * @param cl
     * @return objects (column of table)
     */
    public static Object[] toOjectClass(Class cl) {
        Object[] objects = {cl.getMa_lop_DK(), cl.getBat_dau(), cl.getKet_thuc(), cl.getThu(), cl.getTuan_hoc(), cl.getLoai_lop(), cl.getMa_mon_hoc(), cl.getNhom(), cl.getPhong_hoc(), cl.getDa_DK(), cl.getMax_DK()};
        return objects;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    public javax.swing.JTextField jTextField3;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JButton jbtnsearchmasv;
    private javax.swing.JTable jtbLOP;
    private javax.swing.JTable jtbLOP1;
    private javax.swing.JTable jtbTTSV;
    private javax.swing.JTextField jtfmaLop;
    private javax.swing.JTextField jtfmaSV;
    private java.util.List<edu.hust.soict.objects.ThongTinSinhVien> thongTinSinhVienList;
    private javax.persistence.Query thongTinSinhVienQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void resetForm1() {
        jTextField2.setText("");
    }

//    private void getDetailRegister() {
//        while (dtmDetailReg.getRowCount() > 0) {
//            dtmDetailReg.removeRow(0);
//        }
//        String maSV = jTextField1.getText();
//        ClassDAO cldao = new ClassDAO();
//        ArrayList<Register> list = null;
//        //IStudentDAO sinhVienDAO = (IStudentDAO) Class.forName("Student.StudentDAO").newInstance();  -- use Interface
//        list = cldao.findByIDStudentRegister(maSV);
//        for (Register sv : list) {
//            dtmDetailReg.addRow(toObjectStudentRegister(sv));
//        }
//    }

    private static Object[] toObjectStudentRegister(Register sv) {
        Object[] objects = {sv.getIdDKLop(), sv.getMaSinhVienDK(), sv.getMaLopDK()};
        return objects;

    }

    private void resetForm() {
        jTextField3.setText("");
        jTextField2.setText("");
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jTextField2.setEditable(true);
        //jTextField3.setEditable(true);
    }

    private void fetchJLabel4() throws SQLException {
        if (DBConnect.open()) {
            ps = DBConnect.cnn.prepareCall("select sum(so_tin_chi)\n"
                    + "       from mon_hoc, danh_sach_lop_mo_DK, danh_sach_SV_dang_ki_lop\n"
                    + "       where mon_hoc.id_mon_hoc = danh_sach_lop_mo_DK.id_mon_hoc_DK\n"
                    + "       and danh_sach_SV_dang_ki_lop.ma_lop_mo_SV_DK = danh_sach_lop_mo_DK.ma_lop_mo_DK \n"
                    + "       and id_sinh_vien_DK =" + userlogin);
            rs = ps.executeQuery();
            if (rs.first()) {
                Integer integer = rs.getInt(1);
                String string = "Tổng số TC đã ĐK:";
                jLabel4.setText(string + integer);
            }

        }
    }

    private void fetchListCourses() {
        if (DBConnect.open()) {
            try {
                ps = DBConnect.cnn.prepareStatement("SELECT ma_lop_mo_DK, thoi_gian_bat_dau, thoi_gian_ket_thuc, thu, tuan_hoc, loai_lop, id_mon_hoc_DK, nhom, phong_hoc, so_luong_da_dang_ki, so_luong_max_DK, date_to_exist FROM danh_sach_lop_mo_DK");
                rs = ps.executeQuery();

                while (jtbLOP.getRowCount() > 0) {
                    ((DefaultTableModel) jtbLOP.getModel()).removeRow(0);
                }
                int col = rs.getMetaData().getColumnCount();
                while (rs.next()) {
                    Object[] rows = new Object[col];
                    for (int i = 1; i <= col; i++) {
                        rows[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jtbLOP.getModel()).insertRow(rs.getRow() - 1, rows);
                }
                rs.close();
            } catch (SQLException e) {
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }

    private void fetchRegister() {
        if (DBConnect.open()) {
            try {
                ps = DBConnect.cnn.prepareStatement("SELECT iddanh_sach_SV_dang_ki_lop, id_sinh_vien_DK, ma_lop_mo_SV_DK, danh_sach_lop_mo_DK.id_mon_hoc_DK, mon_hoc.ten_mon_hoc, mon_hoc.so_tin_chi FROM danh_sach_SV_dang_ki_lop, danh_sach_lop_mo_DK, mon_hoc WHERE ma_lop_mo_SV_DK = ma_lop_mo_DK AND mon_hoc.id_mon_hoc=danh_sach_lop_mo_DK.id_mon_hoc_DK AND id_sinh_vien_DK=" + userlogin);
                rs = ps.executeQuery();

                while (jtbLOP1.getRowCount() > 0) {
                    ((DefaultTableModel) jtbLOP1.getModel()).removeRow(0);
                }
                int col = rs.getMetaData().getColumnCount();
                while (rs.next()) {
                    Object[] rows = new Object[col];
                    for (int i = 1; i <= col; i++) {
                        rows[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jtbLOP1.getModel()).insertRow(rs.getRow() - 1, rows);
                }
                rs.close();
            } catch (SQLException e) {
                Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }

}
